<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Nginx 504错误总结]]></title>
      <url>/2017/11/27/Nginx%20504%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>很多人都都可能遇到过 504 Gateway Time-out。有时候会让人一头雾水。<br>解决方法：<br>1.通过百度可以很多人的说法，调整 nginx配置或者PHP-fpm配置，配置大家都可以百度，在这边就不多说。但是很多都尝试了没有什么软用。<br>2.尝试过上面的方法还是回到本质上是不是整站都是504.如果不是，我建议你打开php-fpm 慢日志来查看对应的页面请求与响应慢是由哪个方法或者操作造成的。<br>php-fpm 慢日志的配置如下：<br>request_slowlog_timeout = 5 //5秒以上的 当一个请求该设置的超时时间后，就会将对应的PHP调用堆栈信息完整写入到慢日志中 设置为 ‘0’ 表示 ‘Off’<br>slowlog = /var/log/php-fpm.slow.log   //日志目录</p>
<p>再打开日志方法查看是哪个方法或者操作导致的。直接修改代码。<br>php-fpm 慢日志 不建议在生产环境下使用</p>
<hr>
<ol>
<li><a href="https://my.oschina.net/u/3503791/blog/908623" target="_blank" rel="noopener">https://my.oschina.net/u/3503791/blog/908623</a></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 500错误总结]]></title>
      <url>/2017/11/27/%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/Nginx%20500%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>500（服务器内部错误）    服务器遇到错误，无法完成请求。<br>501（尚未实施）    服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。<br>502（错误网关）    服务器作为网关或代理，从上游服务器收到了无效的响应。<br>503（服务不可用）    目前无法使用服务器（由于超载或进行停机维护）。通常，这只是一种暂时的状态。<br>504（网关超时）    服务器作为网关或代理，未及时从上游服务器接收请求。<br>505（HTTP 版本不受支持）    服务器不支持请求中所使用的 HTTP 协议版本。</p>
<p>Nginx 500错误（Internal Server Error  内部服务器错误）：500错误指的是服务器内部错误，也就是服务器遇到意外情况，而无法履行请求。</p>
<p>500错误一般有几种情况：</p>
<ol>
<li><p>web脚本错误，如php语法错误，lua语法错误等。</p>
</li>
<li><p>访问量大的时候，由于系统资源限制，而不能打开过多的文件</p>
</li>
</ol>
<p>一般分析思路：</p>
<p>（1）查看nginx error log ，查看php error log</p>
<p>（2）如果是too many open files，修改nginx的worker_rlimit_nofile参数，使用ulimit查看系统打开文件限制，修改/etc/security/limits.conf</p>
<p>（3）如果是脚本的问题，则需要修复脚本错误，并优化代码</p>
<p>（4）各种优化都做好，还是出现too many open files，那就要考虑做负载均衡，把流量分散到不同服务器上去了。</p>
<p>错误原因总结：</p>
<p>1、硬盘空间满了 </p>
<p>使用 df -k 查看硬盘空间是否满了。清理硬盘空间就可以解决500错误。nginx如果开启了access log，在不需要的情况下，最好关闭access log。access log会占用大量硬盘空间。 </p>
<p>2、nginx配置文件错误 </p>
<p>这里不是指语法错误，nginx如果配置文件有语法错误，启动的时候就会提示。当配置rewrite的时候，有些规则处理不当会出现500错误，请仔细检查自己的rewrite规则。如果配置文件里有些变量设置不当，也会出现500错误，比如引用了一个没有值的变量。 </p>
<p>3、如果上面的问题都不存在可能是模拟的并发数太多了，需要调整一下nginx.conf的并发设置数 </p>
<p>解决方法是： </p>
<p>1 打开/etc/security/limits.conf文件，加上两句</p>
<p>复制代码代码如下:</p>
<ul>
<li>soft nofile 65535 </li>
<li>hard nofile 65535 </li>
</ul>
<p>2 打开/etc/nginx/nginx.conf<br>在worker_processes的下面增加一行 </p>
<p>复制代码代码如下:<br>worker_rlimit_nofile 65535;</p>
<p>3 重新启动nginx，重新载入设置 </p>
<p>复制代码代码如下:<br>kill -9 <code>ps -ef | grep php | grep -v grep | awk &#39;{print $2}&#39;</code><br>/usr/bin/spawn-fcgi -a 127.0.0.1 -p 9000 -C 100 -u www-data -f /usr/bin/php-cgi<br>killall -HUP nginx<br>重启后再看nginx的错误日志，也没有发现500报错的情况了。 </p>
<p>4、有可能是数据库问题我的在nginx日志php日志都没有发现什么问题, 最后发现数据库访问不了,修正后问题解决。</p>
<hr>
<p>参考：</p>
<ol>
<li><a href="http://www.cnblogs.com/huqiang/p/5333975.html" target="_blank" rel="noopener">http://www.cnblogs.com/huqiang/p/5333975.html</a></li>
<li></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP慢日志slow_log]]></title>
      <url>/2017/11/27/PHP%E6%85%A2%E6%97%A5%E5%BF%97slow-log/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp; php-fpm慢日志<code>slowl_og</code>设置可以让开发者很好的查找哪些php进程速度过慢而导致的网站问题，让开发者方便的找到问题的所在。该方法同样适用于排查nginx的500、502问题根源，当nginx收到如上错误码时，可以确定后端php-fpm解析php出了某种问题，比如，执行错误，执行超时等。</p>
<p>php-fpm.conf的配置文件中有一个参数<code>request_slowlog_timeout</code>是这样描述的：</p>
<blockquote>
<p>; The timeout for serving a single request after which a PHP backtrace will be dumped to the ‘slowlog’ file. A value of ‘0s’ means ‘off’.<br>; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)<br>; Default Value: 0<br>; request_slowlog_timeout = 0</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 当request_slowlog_timeout设为一个具体秒时,比如request_slowlog_timeout =5，表示如果哪个脚本执行时间大于5秒，会记录这个脚本到慢日志文件中。</span><br><span class="line">2. request_slowlog_timeout =0表示关闭慢日志输出</span><br></pre></td></tr></table></figure>
<p>慢日志文件位置默认在php的安装目录下的log文件夹中，可以通过修改<code>slowlog = log/$pool.log.slow</code>参数来指定,如下，慢日志会记录下进程号，脚本名称，具体哪个文件哪行代码的哪个函数执行时间过长：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[21-Nov-2013 14:30:38] [pool www] pid 11877</span><br><span class="line">script_filename = /usr/local/nginx/html/www.quancha.cn/www/fyzb.php</span><br><span class="line">[0xb70fb88c] file_get_contents() /usr/local/nginx/html/www.quancha.cn/www/fyzb.php:2</span><br><span class="line">[21-Nov-2013 14:15:23] ERROR: [pool www] &apos;slowlog&apos; must be specified for use with &apos;request_slowlog_timeout&apos;</span><br></pre></td></tr></table></figure>
<ol>
<li>request_slowlog_timeout 和 slowlog 需要同时设置</li>
<li>需要手动创建slowlog文件夹</li>
</ol>
<p>开启后，如果有脚本执行超过指定的时间，就会在指定的日志文件中写入类似如下的信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[19-Dec-2013 16:54:49] [pool www] pid 18575</span><br><span class="line">script_filename = /home/web/htdocs/sandbox_canglong/test/tt.php</span><br><span class="line">[0x0000000003a00dc8] curl_exec() /home/web/htdocs/sandbox_canglong/test/tt.php:2</span><br><span class="line">[0x0000000003a00cd0] exfilter_curl_get() /home/web/htdocs/sandbox_canglong/test/tt.php:6</span><br></pre></td></tr></table></figure>
<p>日志说明：</p>
<ol>
<li>script_filename 是入口文件</li>
<li>curl_exec() ： 说明是执行这个方法的时候超过执行时间的。</li>
<li>exfilter_curl_get() ：说明调用curl_exec()的方法</li>
<li>exfilter_curl_get() 。</li>
<li>每行冒号后面的数字是行号</li>
</ol>
<p>开启后，在错误日志文件中也有相关记录。如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[19-Dec-2013 15:55:37] WARNING: [pool www] child 18575, script &apos;/home/web/htdocs/sandbox_canglong/test/tt.php&apos; (request: &quot;GET /test/tt.php&quot;) executing too slow (1.006222 sec), logging</span><br><span class="line">[19-Dec-2013 15:55:37] NOTICE: child 18575 stopped for tracing</span><br><span class="line">[19-Dec-2013 15:55:37] NOTICE: about to trace 18575</span><br><span class="line">[19-Dec-2013 15:55:37] NOTICE: finished trace of 18575</span><br></pre></td></tr></table></figure>
<hr>
<p>参考博客：</p>
<ol>
<li><a href="http://blog.csdn.net/leonpengweicn/article/details/42494813" target="_blank" rel="noopener">http://blog.csdn.net/leonpengweicn/article/details/42494813</a></li>
<li><a href="http://www.bo56.com/%E5%96%84%E7%94%A8php-fpm%E7%9A%84%E6%85%A2%E6%89%A7%E8%A1%8C%E6%97%A5%E5%BF%97slow-log%EF%BC%8C%E5%88%86%E6%9E%90php%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">http://www.bo56.com/%E5%96%84%E7%94%A8php-fpm%E7%9A%84%E6%85%A2%E6%89%A7%E8%A1%8C%E6%97%A5%E5%BF%97slow-log%EF%BC%8C%E5%88%86%E6%9E%90php%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/</a></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2018研发校招面经]]></title>
      <url>/2017/11/22/2018%E7%A0%94%E5%8F%91%E6%A0%A1%E6%8B%9B%E9%9D%A2%E7%BB%8F/</url>
      <content type="html"><![CDATA[<p>工欲善其事必先利其器</p>
<table>
<thead>
<tr>
<th><a href="https://www.nowcoder.com/discuss/41696?type=0&amp;order=4&amp;pos=6&amp;page=2" target="_blank" rel="noopener">阿里、腾讯</a></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.nowcoder.com/discuss/5949?type=0&amp;order=4&amp;pos=129&amp;page=9" target="_blank" rel="noopener">阿里面试题总结</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/54297?type=0&amp;order=4&amp;pos=30&amp;page=3" target="_blank" rel="noopener">百度、京东、蘑菇街、腾讯</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/59683?type=0&amp;order=4&amp;pos=28&amp;page=1" target="_blank" rel="noopener">阿里、华为、滴滴、百度、携程、爱奇艺、美团</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/27285?type=0&amp;order=4&amp;pos=16&amp;page=1" target="_blank" rel="noopener">百度、京东、滴滴、新浪</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/14852?type=0&amp;order=4&amp;pos=15&amp;page=1" target="_blank" rel="noopener">百度、腾讯、网易、360、去哪网</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/41650?type=0&amp;order=4&amp;pos=14&amp;page=1" target="_blank" rel="noopener">百度、头条、滴滴、阿里、搜狐</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/62849?type=0&amp;order=4&amp;pos=17&amp;page=1" target="_blank" rel="noopener">腾讯、滴滴、阿里、网易、小米、京东、美团、百度</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/50455?type=0&amp;order=4&amp;pos=70&amp;page=2" target="_blank" rel="noopener">美团、蚂蚁金服、阿里</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/57771?type=0&amp;order=4&amp;pos=73&amp;page=2" target="_blank" rel="noopener">蚂蚁金服、携程、美团、58</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/57075?type=0&amp;order=4&amp;pos=82&amp;page=2" target="_blank" rel="noopener">美团、腾讯、百度</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/59132?type=0&amp;order=4&amp;pos=29&amp;page=2" target="_blank" rel="noopener">阿里、美团、同花顺</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/50439?type=0&amp;order=4&amp;pos=58&amp;page=1" target="_blank" rel="noopener">阿里、小米、搜狗、美团、百度、腾讯、便利蜂</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/37873?type=0&amp;order=4&amp;pos=91&amp;page=1" target="_blank" rel="noopener">蚂蚁金服、链家</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/37180?type=0&amp;order=4&amp;pos=23&amp;page=1" target="_blank" rel="noopener">阿里</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/26045?type=0&amp;order=4&amp;pos=59&amp;page=2" target="_blank" rel="noopener">腾讯</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/59401?type=0&amp;order=4&amp;pos=95&amp;page=1" target="_blank" rel="noopener">小米</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/61879?type=0&amp;order=4&amp;pos=51&amp;page=1" target="_blank" rel="noopener">华为</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/52168?type=0&amp;order=4&amp;pos=37&amp;page=2" target="_blank" rel="noopener">头条、网易、美团、google、京东</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/60743?type=0&amp;order=4&amp;pos=33&amp;page=2" target="_blank" rel="noopener">腾讯、阿里</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/60078?type=0&amp;order=4&amp;pos=31&amp;page=1" target="_blank" rel="noopener">百度、阿里</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/52268?type=0&amp;order=4&amp;pos=32&amp;page=2" target="_blank" rel="noopener">蚂蚁金服、京东</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/33737?type=0&amp;order=4&amp;pos=18&amp;page=2" target="_blank" rel="noopener">知识点总结</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/60509?type=0&amp;order=4&amp;pos=12&amp;page=3" target="_blank" rel="noopener">知识点总结</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/61958?type=0&amp;order=4&amp;pos=11&amp;page=6" target="_blank" rel="noopener">知识点总结</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/59865?type=0&amp;order=4&amp;pos=13&amp;page=1" target="_blank" rel="noopener">书籍</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/60441?type=0&amp;order=4&amp;pos=36&amp;page=2" target="_blank" rel="noopener">面试书籍</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/21253?type=0&amp;order=4&amp;pos=22&amp;page=1" target="_blank" rel="noopener">高级算法</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/52516?type=0&amp;order=4&amp;pos=25&amp;page=6" target="_blank" rel="noopener">校招心路总结</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/18518?type=0&amp;order=4&amp;pos=85&amp;page=2" target="_blank" rel="noopener">校招历程</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/56158?type=0&amp;order=4&amp;pos=54&amp;page=3" target="_blank" rel="noopener">校招历程</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/51298?type=0&amp;order=4&amp;pos=40&amp;page=2" target="_blank" rel="noopener">校招历程</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/52557?type=0&amp;order=4&amp;pos=26&amp;page=4" target="_blank" rel="noopener">大数据面经，阿里，百度，头条，滴滴，美团，京东，携程</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/48218?type=0&amp;order=4&amp;pos=7&amp;page=1" target="_blank" rel="noopener">链家、58、美团、滴滴、头条、百度、腾讯</a></td>
</tr>
<tr>
<td><a href="https://www.nowcoder.com/discuss/60441?type=0&amp;order=4&amp;pos=36&amp;page=2" target="_blank" rel="noopener">知识点</a></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 面试 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 校招 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[重启远程linux主机]]></title>
      <url>/2017/11/21/%E9%87%8D%E5%90%AF%E8%BF%9C%E7%A8%8Blinux%E4%B8%BB%E6%9C%BA/</url>
      <content type="html"><![CDATA[<p>在终端上利用ssh，不登录远程主机，直接发送重启命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.8.128 &apos;reboot&apos;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HTTP常见状态码]]></title>
      <url>/2017/11/20/HTTP%E5%B8%B8%E8%A7%81%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      <content type="html"><![CDATA[<h1 id="400错误-请求无效-Bad-request"><a href="#400错误-请求无效-Bad-request" class="headerlink" title="400错误 - 请求无效 (Bad request)"></a>400错误 - 请求无效 (Bad request)</h1><h1 id="499错误"><a href="#499错误" class="headerlink" title="499错误"></a><a href="https://mandydragon.github.io/2017/11/20/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E5%87%BA%E7%8E%B0499%E9%94%99%E8%AF%AF/">499错误</a></h1>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[HTTP状态码出现499错误]]></title>
      <url>/2017/11/20/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E5%87%BA%E7%8E%B0499%E9%94%99%E8%AF%AF/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[使用七牛云做hexo图床]]></title>
      <url>/2017/11/20/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%81%9Ahexo%E5%9B%BE%E5%BA%8A/</url>
      <content type="html"><![CDATA[<p><a href="http://www.lzblog.cn/2016/04/06/%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E5%81%9A%E5%9B%BE%E5%BA%8A%EF%BC%8C%E4%B8%BAhexo%E5%AD%98%E5%82%A8%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">使用七牛云存储做图床，为hexo存储引用图片</a></p>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[web常见问题排查]]></title>
      <url>/2017/11/20/%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="一般排查方法"><a href="#一般排查方法" class="headerlink" title="一般排查方法"></a>一般排查方法</h1><ul>
<li>检查error_log</li>
<li>检查access_log</li>
<li>检查slow_log</li>
<li>strace查看系统调用</li>
<li>tcpdump分析网络状况</li>
<li>程序的gdb调试</li>
</ul>
<h1 id="error-log"><a href="#error-log" class="headerlink" title="error_log"></a>error_log</h1><p><em>error_log提供了有关异常的丰富信:</em></p>
<ul>
<li>网络超时：connect,write,read timeout</li>
<li>File not found</li>
<li><a href="https://mandydragon.github.io/2017/11/20/HTTP%E5%B8%B8%E8%A7%81%E7%8A%B6%E6%80%81%E7%A0%81/">HTTP状态码</a></li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 举例来讲，更新nginx后，http请求不能返回完整数据，返回部分数据后请求就结束了，每次都能复现。这时候查看error_log,看到有Permission denied错误，即查实为nginx的临时写目录没有权限所造成。</p>
<h1 id="slow-log"><a href="#slow-log" class="headerlink" title="slow_log"></a><a href="https://mandydragon.github.io/2017/11/27/PHP%E6%85%A2%E6%97%A5%E5%BF%97slow-log/">slow_log</a></h1><p>&nbsp;&nbsp;&nbsp;&nbsp;php-fpm慢日志slowl_og设置可以让开发者很好的查找哪些php进程速度过慢而导致的网站问题，让开发者方便的找到问题的所在。该方法同样适用于排查nginx的500、502问题根源，当nginx收到如上错误码时，可以确定后端php-fpm解析php出了某种问题，比如，执行错误，执行超时等。</p>
<h1 id="access-log"><a href="#access-log" class="headerlink" title="access_log"></a>access_log</h1><p>对access_log进行统计分析，可以很好地展示与监控web服务的状态。包括200请求次数的变化，流量大小，后端响应时间等等。一般地讲：<br>可以定义access_log每5分钟翻转1次；<br>统计HTTP状态码的比例，可以知道nginx服务健康状况；<br>统计响应时间，判断超时请求。（根据经验，如果响应时间分布集中在某个数字，并且标准差很小，则可能是达到超时）<br>统计QPS，对比负载是否均衡。</p>
<p>举例：在一次nginx应用更新的灰度过程中，我们选取一台nginx上线，观察接下来的半小时内，nginx占用内存不断增大，直到耗尽系统资源。排查error_log中并没有错误信息；监控发现新上线的nginx流量大增；分析access_log发现新上线的nginx的QPS是原机器的6~8倍。证实是Keepalived导致流量负载不均衡。LVS作为负载均衡时，后端的nignx配置的keepalive_timeout时间有差异导致。</p>
<p>LVS的负载均衡是TCP层的，只能做连接的均衡，如果Keepalive时间设置的超长，会导致路由到这个连接的请求越多<br>access_log排查举例2：nginx做反向代理，有时发现某些接口较慢，通常都在3s左右。<br>配置nginx的access log记录upstream_response_time，分析发现响应大约3s多。而分析后端的access_log，处理时间都在毫秒级别。这说明问题是由于nginx跟后端connect较慢导致</p>
<h1 id="slow-log-1"><a href="#slow-log-1" class="headerlink" title="slow_log"></a>slow_log</h1><h1 id="strace"><a href="#strace" class="headerlink" title="strace"></a>strace</h1><p>使用strace命令工具可跟踪系统调用并打印出丰富的信息，如系统调用发生的时间，调用耗时，传送的参数，调用返回结果等等。<br>常用参数有：<br>-tt 打印系统调用发生的时间<br>-T 打印系统调用耗时<br>-e <name> 跟踪特定系统调用，比如-e open,read,write,close来追踪文件相关调用<br>-s <size> 指定打印的最大长度</size></name></p>
<p>strace举例:某个PHP进程hang住，其pid为26879，那么可以使用strace -p 26879来观察。<br>示例显示，futex表示很可能发生死锁，strace打印出其参数值。</p>
<p>某次排查PHP问题时，发现有时PHP处理请求过慢，就可用strace来追查验证系统调用耗时。结果strace -T就发现是flock调用过慢</p>
<p>而另外一次，朋友线上出了故障，系统负载特别高，load到200多，CPU使用率也到90%的，特别高，关键是使用strace追查并没有发现什么问题。这里要说明一下，strace只能追踪系统调用，普通函数是无法追踪的。CPU很高，说明程序一直在跑，但strace没有异常，说明是用户状代码在消耗CPU。问题必定出现在自己程序逻辑上。<br>最终证实是系统上线更换配置文件，导致程序逻辑出错。</p>
<h1 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h1><p>tcpdump是linux本身得供的一款强大的网络抓包工具。对于两台设备之间传输的数据是否正常，为何响应慢等网络问题，都可以使用tcpdump来抓包排查。<br>windows下面有一款具有同样功能的工具软件–wireshark,也很好用。</p>
<p>还记得刚才示例中提到的慢连接吧，Nginx的access_log显示请求响应时间为3s多，而后端是毫秒计，这种慢就可以使用tcpdump来抓包查看了</p>
<p>可以看到后端响应ack花了3s.这种慢连接，我们线上会经常碰到。通常nginx做反向代量连接后端时、php程序在访问后端资源时、以及php用curl请求其他接口时，经常出现慢连接的情况。这些慢连接产生的根本原因在于：<br>–服务端listen时，设置的backlog太小，导致连接队列很小；<br>–连接队列满时，对于新的连接请求，服务端会直接丢弃SYN包；<br>–SYN包初始重传时间为3s；</p>
<p>再举一下综合案例：PHP升级后，开始运行正常，但几天后，系统负载突然上升，达到200-400左右，CPU使用不高，内存使用不高，netstat发现大量的PHP进程处于CLOSE_WAIT状态。<br>排查：error_log与access_log都没有问题；<br>nginx与PHP不在同一台机器，暂时无法查看其error_log；<br>CPU、内存都不高，为何负载这么高？<br>CLOSE_WAIT是怎么造成的</p>
<p>我们先从CLOSE_WAIT入手，TCP关闭连接过程中，被动关闭的一方，在接收到对方的FIN后，发送自己的FIN前，这个状态就是CLOSE_WAIT。<br>系统调用close，关闭连接，发送FIN</p>
<p>从CLOSE_WAIT的状态看，PHP应该是没有调用close函数，程序可能因为某种原因堵塞，而无法调用close。<br>启用strace追踪PHP进程到底堵塞在哪里。<br>strace追踪结果来看，PHP进程没有堵塞，但write函数调用失败，Broken pipe说明连接已经关闭，调用close了。</p>
<p>继续strace分析，连接为什么关闭，是后端PHP处理太慢导致nginx超时么？从strace看到，PHP从accept到close，总共耗时1ms，nginx不可能超时。</p>
<p>我们启动tcpdump抓包（windows下使用wireshark查看）</p>
<p>发现3个异常：<br>–3次握手nginx发送的SYN，PHP响应是ACK，而不是SYN+ACK<br>–Nginx发送FIN关闭连接后，PHP没有发送FIN<br>–第二个连接的SYN，PHP同样只返回ACK，但ACK序列号却是确认上一个连接的。</p>
<p>结合strace与tcpdump来看，accept调用比接收到SYN晚了2分钟</p>
<p>这里可以看到：SYN三次握手完成后，socket放到了连接队列里，accept从连接队列获取socket，如果队列过大，等到accept消费到这个socket，可能已经超时关闭连接。队列中关闭的连接处于CLOSE_WAIT状态。若PHP一个关闭的连接，就会出现Broken Pipe报错现象。<br>这其实就是backlog设置过大引起。</p>
<p>总结一下，web问题排障很复杂，找到正确的方向很重要。学会看log与系统状态，学会使用统计数据（常用的一些awk,grep命令)，熟悉一些常用的工具。<br>问题一定是有原因的，要找到root cause(真正的根本原因)</p>
]]></content>
      
        <categories>
            
            <category> 问题解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小说推荐]]></title>
      <url>/2017/11/17/%E5%B0%8F%E8%AF%B4%E6%8E%A8%E8%8D%90/</url>
      <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>修仙</th>
<th><a href="https://book.qidian.com/info/107580" target="_blank" rel="noopener">凡人修仙传</a></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1735921" target="_blank" rel="noopener">遮天</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1607346" target="_blank" rel="noopener">一仙难求</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/2586940" target="_blank" rel="noopener">仙灵图谱</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/2263971" target="_blank" rel="noopener">凡女仙葫</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=1066345" target="_blank" rel="noopener">慢慢仙途</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=2443005" target="_blank" rel="noopener">修真之上仙</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1950425" target="_blank" rel="noopener">仙本纯良</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://www.lewenxiaoshuo.com/books/tianxiananxiujieluding" target="_blank" rel="noopener">天下…</a></td>
</tr>
<tr>
<td>机甲</td>
<td><a href="http://www.mytxt.cc/read/16228/" target="_blank" rel="noopener">信不信我吃了你</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://91baby.mama.cn/thread-1109332-1-1.html" target="_blank" rel="noopener">机甲护翼</a></td>
</tr>
<tr>
<td>重生古言</td>
<td><a href="https://book.qidian.com/info/2559578" target="_blank" rel="noopener">九重紫</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/3301828" target="_blank" rel="noopener">金陵春</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1003303774" target="_blank" rel="noopener">慕南枝</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1626560" target="_blank" rel="noopener">庶女攻略</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://91baby.mama.cn/thread-1085179-1-1.html" target="_blank" rel="noopener">嫡谋</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/3247938" target="_blank" rel="noopener">金枝</a></td>
</tr>
<tr>
<td>穿越古言</td>
<td><a href="https://book.qidian.com/info/2288861" target="_blank" rel="noopener">名门闺杀</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=1603498" target="_blank" rel="noopener">穿越之丑夫</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/2239748" target="_blank" rel="noopener">万事如意</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1681402" target="_blank" rel="noopener">新唐遗玉</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=931329" target="_blank" rel="noopener">知否，知否？应是红肥绿瘦</a></td>
</tr>
<tr>
<td>宋史</td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=2408" target="_blank" rel="noopener">柔福帝姬</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=31901" target="_blank" rel="noopener">孤城闭</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=469709" target="_blank" rel="noopener">御天香</a></td>
</tr>
<tr>
<td>清朝</td>
<td><a href="https://book.qidian.com/info/242091" target="_blank" rel="noopener">永和宫主</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=1926734" target="_blank" rel="noopener">清穿日常</a></td>
</tr>
<tr>
<td>上古神话</td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=1364156" target="_blank" rel="noopener">曾许诺</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://91baby.mama.cn/thread-497793-1-1.html" target="_blank" rel="noopener">香蜜沉沉烬如霜</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1001524740" target="_blank" rel="noopener">三生三世十里桃花</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://www.kanunu8.com/book4/10671/" target="_blank" rel="noopener">三生三世枕上书</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://www.kanunu8.com/book4/10401/" target="_blank" rel="noopener">长相思</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://www.kanunu8.com/files/yqxs/201103/1863.html" target="_blank" rel="noopener">华胥引</a></td>
</tr>
<tr>
<td>游戏</td>
<td><a href="https://www.kanunu8.com/files/youth/201104/2451.html" target="_blank" rel="noopener">微微一笑很倾城</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=728892" target="_blank" rel="noopener">玩个天下好胃疼</a></td>
</tr>
<tr>
<td>现代言情</td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=2456" target="_blank" rel="noopener">何以笙箫默</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=1347851" target="_blank" rel="noopener">原来你还在这里</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://www.kanunu8.com/book4/10237/" target="_blank" rel="noopener">致我们终将逝去的青春</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://www.kanunu8.com/book/4454/" target="_blank" rel="noopener">山月不知心底事</a></td>
</tr>
<tr>
<td>青梅竹马</td>
<td><a href="http://www.jjwxc.net/onebook.php?novelid=870517" target="_blank" rel="noopener">百花深处</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/1009549788" target="_blank" rel="noopener">娇术</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/2290496" target="_blank" rel="noopener">花开锦绣</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://book.qidian.com/info/3565842" target="_blank" rel="noopener">红茱记</a></td>
</tr>
<tr>
<td>热血青春</td>
<td><a href="http://www.zetianji123.com/" target="_blank" rel="noopener">择天记</a></td>
</tr>
</tbody>
</table>
<hr>
]]></content>
      
        <categories>
            
            <category> 小说 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> novel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[php魔术方法]]></title>
      <url>/2017/11/17/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>PHP 将所有以 <em> </em>开头的类法保 为魔术方法。所以在定义类方法时，除了上述魔术方法，建议不要以 <em> </em> 为前缀</p>
<h1 id="一、方法简介"><a href="#一、方法简介" class="headerlink" title="一、方法简介"></a>一、方法简介</h1><ul>
<li><p>__construct()，类的构造函数，在同一个类中只能声明一个构造方法</p>
<pre><code>php不支持重载，如需要父类的构造函数需显式调用
</code></pre></li>
<li>__destruct()，类的析构函数，析构方法允许在销毁整个类之前执行的某些操作，无参数</li>
<li><strong>call()、</strong>callStatic()，方法重载，调用未定义过的(静态)方法时被调用,可以使用__call进行友善的<code>错误处理</code>，避免当调用不存在的方法时产生错误，意外的导致程序中止</li>
<li>属性重载</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> void __set ( string $name , mixed $value )</span><br><span class="line"><span class="keyword">public</span> mixed __get ( string $name )</span><br><span class="line"><span class="keyword">public</span> bool __isset ( string $name )</span><br><span class="line"><span class="keyword">public</span> void __unset ( string $name )</span><br></pre></td></tr></table></figure>
<ul>
<li>__clone()复制时调用，复制时引用复制（浅复制），结合clone关键字实现真正的复制</li>
<li><strong>autoload()作用: 是当你调用不存在的类时会被动调用，不建议使用，原因:</strong>autoload()重复定义时，冲突报错，只能有一个__autoload()函数</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($class)</span></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(file_exists($class.<span class="string">".php"</span>))&#123;</span><br><span class="line">            <span class="keyword">require_once</span>($class.<span class="string">".php"</span>);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">"文件不存在!"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>推荐使用spl_autoload_register()</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_autoload1</span><span class="params">($class)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(file_exists(<span class="string">"classes/"</span>.$class.<span class="string">".php"</span>))&#123;</span><br><span class="line">      <span class="keyword">require_once</span>(<span class="string">"classes/"</span>.$class.<span class="string">".php"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">      <span class="keyword">die</span>(<span class="string">"文件不存在!"</span>);</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_autoload2</span><span class="params">($class)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(file_exists(<span class="string">"core/"</span>.$class.<span class="string">".php"</span>))&#123;</span><br><span class="line">            <span class="keyword">require_once</span>(<span class="string">"core/"</span>.$class.<span class="string">".php"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"文件不存在!"</span>); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//将加载函数注册到PHP中</span></span><br><span class="line">spl_autoload_register(<span class="string">"my_autoload1"</span>);</span><br><span class="line">spl_autoload_register(<span class="string">"my_autoload2"</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>__sleep()在对一个对象序列化时(调用serialize()时)会被调用。它不接收任何参数，而且应该返回一个包含所有应该被序列化的属性的数组;</li>
<li>__wakeup()在对存储的对象反序列化时会被调用;</li>
<li>__toString() :在我们将对象当作字符串一样使用时会被调用;</li>
<li>__set_state:使用var_export()函数输出对象时会调用该方法</li>
<li>__debugInfo(): 打印调试信息时调用</li>
<li>__invoke() :使用调用函数的方式调一个对象时调用该函数</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $sex;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name=<span class="string">""</span>, $age=<span class="number">25</span>, $sex=<span class="string">'男'</span>)</span></span>&#123;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;age  = $age;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;sex  = $sex;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'这是 个对象'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">$person = <span class="keyword">new</span> Person(<span class="string">'jack'</span>);</span><br><span class="line">$person();</span><br></pre></td></tr></table></figure>
<h1 id="二、-AOP在PHP中的实现"><a href="#二、-AOP在PHP中的实现" class="headerlink" title="二、 AOP在PHP中的实现"></a>二、 AOP在PHP中的实现</h1><p>&emsp;&emsp;在传统的OOP(面向对象编程:Object-Oriented Programming)思想 ，一般把应用程序分解成若干个对象，强调<code>高内聚</code>，<code>弱耦合</code>，从而提高应用程序的模块化程度，但是在处理某些问题的时候，OOP会显得不够灵活,比如说:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">应用程序很多业务逻辑都要在操作之初进 “权限检查”，在操作之后进行“日志记录”，如果直接把处理逻辑直接加到</span><br><span class="line">每个模块中，那么无疑破坏了OOP的“单一职责”原则，模块的可重用就会大大降低，这时候传统的OOP设计往往采取的策</span><br><span class="line">略是加如相应的代理(Proxy)层来完成系统的功能要求，但这样的处理明显使系统整体增加一个层次的划分，复杂性也随</span><br><span class="line">之增加，从而给人过于厚重的感觉。</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;正是为了处理这样的问题，<code>AOP</code>(面向切面编程:Aspect-Oriented Programming)思想应运而生，假设把应用程序想成一个立体结构的话，OOP的刃是<code>纵向</code>切入系统，把系统划分为很多个模块(如:用户模块，文章模块等)， AOP的刀刃是横向切分系统，提取各个模块可能都要重复操作的部分(如:权限检查，日志记录等等)。由此可见，AOP是OOP的一个有效补充。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">就目前的PHP来说，还没有一个完整的AOP内置实现，虽然出现 RunKit，但估计很长时间内不太可能成为PHP的缺省设置。</span><br><span class="line">那是么是AOP在PHP可以实现吗?当然，因为我们有get()，set()，__call()等魔术方法，结合起来使用这些方法可以为</span><br><span class="line">我们实现某种程度的“准AOP”，之所以说是准AOP，是因为单单从实现上来看，称其为AOP有些牵强，但是从效果上来看，</span><br><span class="line">又部分实现  AOP的作用，虽然其实现方式并不完美，但对于一般的使用已经够了。</span><br></pre></td></tr></table></figure>
<h1 id="三、魔术变量"><a href="#三、魔术变量" class="headerlink" title="三、魔术变量"></a>三、魔术变量</h1><ol>
<li>LINE: 文件中的当前行号。</li>
<li>FILE: 文件的完整路径和文件名。当在被包含文件中，则返回被包含的文件名</li>
<li>DIR: 文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。</li>
<li>FUNCTION: 常量，返回该函数被定义时的名字</li>
<li>CLASS: 常量，返回该类被定义时的名字(区分大小写)。</li>
<li>METHOD:返回该方法被定义时的名字(区分大小写)。<br>7.NAMESPACE:当前命名空间的名称(区分大小写)</li>
</ol>
<h1 id="四、超全局变量"><a href="#四、超全局变量" class="headerlink" title="四、超全局变量"></a>四、超全局变量</h1><ol>
<li>$GLOBALS:储存全局作用域中的变量。</li>
<li>$_SERVER:获取服务器相关信息。</li>
<li>$_REQUEST:获取POST和GET请求的参数</li>
<li>$_POST:获取表单的POST请求参数 </li>
<li>$_GET:获取表单的GET请求参数</li>
<li>$_FILES:获取上传文件的的变量</li>
<li>$_ENV:获取服务器端环境变量的数组</li>
<li>$_COOKIE:浏览器cookie的操作</li>
<li>$_SESSION:服务端session的操作</li>
</ol>
<h1 id="五、结语"><a href="#五、结语" class="headerlink" title="五、结语"></a>五、结语</h1><p>&emsp;&emsp;PHP中的”重载”与其它绝大多数面向对象语言不同。传统的”重载”是提供多个同名的类方法，但各方法的参数类型和个数不同。 PHP所提供的”重载”(overloading)是指动态地”创建”类属性和方法。 当调用当前环境下未定义或 不可见的类属性或方法时，重载方法会被调用</p>
<hr>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos安装php7]]></title>
      <url>/2017/11/16/Centos7%E5%AE%89%E8%A3%85php7/</url>
      <content type="html"><![CDATA[<p>#php7 yum安装</p>
<p>##哈哈哈哈<br><em>加载</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello word</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
            <tag> php7 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
